.TH "SettingsWidget" 3 "Mon Jul 11 2022" "openPilotLog" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SettingsWidget \- The \fBSettingsWidget\fP is used to to display and alter Settings\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <settingswidget\&.h>\fP
.PP
Inherits QWidget\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBSettingSignal\fP { \fBLogbookWidget\fP, \fBHomeWidget\fP, \fBAircraftWidget\fP, \fBPilotsWidget\fP, \fBMainWindow\fP }"
.br
.RI "enumerates Widgets that need to receive a signal when a setting is updated\&. "
.in -1c
.SS "Signals"

.in +1c
.ti -1c
.RI "void \fBsettingChanged\fP (\fBSettingsWidget::SettingSignal\fP widget)"
.br
.RI "settingChanged is emitted when a setting change occurs that needs to trigger an update (repaint) to another widget\&. "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSettingsWidget\fP (QWidget *parent=nullptr)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBchangeEvent\fP (QEvent *event) override"
.br
.RI "Handles change events, like updating the UI to new localisation\&. "
.in -1c
.SH "Detailed Description"
.PP 
The \fBSettingsWidget\fP is used to to display and alter Settings\&. 

Most Inputs are collected and processed in various slots and written to the settings file via the \fBASettings\fP class\&. In the \fCPersonal\fP Settings tab, the user can edit his personal details, which are then written to the Database (The Logbook owner is registered in the Pilots Database with \fCpilot_id = 1\fP)\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for openPilotLog from the source code\&.
