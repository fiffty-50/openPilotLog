.TH "ADate" 3 "Mon Jul 11 2022" "openPilotLog" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ADate \- The \fBADate\fP class is responsible for input/output of Dates and handling the different Date Formats\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <adate\&.h>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static QDate \fBparseInput\fP (QString &io_user_input, \fBOPL::DateFormat\fP format)"
.br
.RI "takes a user-provided input and tries to convert it to a (valid) QDate\&. "
.ti -1c
.RI "static void \fBtryToFix\fP (QString &io_user_input, \fBOPL::DateFormat\fP format)"
.br
.ti -1c
.RI "static void \fBpadCentury\fP (QString &io_user_input, \fBOPL::DateFormat\fP format)"
.br
.RI "padCentury adds the century to a date where it was omitted "
.ti -1c
.RI "static void \fBpadZeroes\fP (QString &io_user_input)"
.br
.RI "pads a user-provided date string with 0s to facilitate conversion to QDate "
.ti -1c
.RI "static void \fBaddSeperators\fP (QString &io_user_input, const \fBOPL::DateFormat\fP &format)"
.br
.ti -1c
.RI "static bool \fBcontainsSeperator\fP (const QString &user_input)"
.br
.ti -1c
.RI "static QString \fBtoString\fP (const QDate &date, \fBOPL::DateFormat\fP format=OPL::DateFormat::ISODate)"
.br
.RI "Reimplements QDate::toString to accept OPL::Date::ADateFormat enums\&. "
.ti -1c
.RI "static const QStringList & \fBgetDisplayNames\fP ()"
.br
.ti -1c
.RI "static const QString \fBgetFormatString\fP (\fBOPL::DateFormat\fP format)"
.br
.ti -1c
.RI "static const QString \fBcurrentDate\fP ()"
.br
.RI "today Returns a string containing the current date in ISO format "
.in -1c
.SH "Detailed Description"
.PP 
The \fBADate\fP class is responsible for input/output of Dates and handling the different Date Formats\&. 
.SH "Member Function Documentation"
.PP 
.SS "const QString ADate::currentDate ()\fC [static]\fP"

.PP
today Returns a string containing the current date in ISO format 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "QDate ADate::parseInput (QString & io_user_input, \fBOPL::DateFormat\fP format)\fC [static]\fP"

.PP
takes a user-provided input and tries to convert it to a (valid) QDate\&. 
.PP
\fBReturns\fP
.RS 4
QDate (invalid if input not recognized) 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for openPilotLog from the source code\&.
