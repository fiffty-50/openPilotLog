.TH "LogbookWidget" 3 "Fri Mar 4 2022" "openPilotLog" \" -*- nroff -*-
.ad l
.nh
.SH NAME
LogbookWidget \- The \fBLogbookWidget\fP displays data from the database in a QSqlTableView fed by a QSqlQuery Model\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <logbookwidget\&.h>\fP
.PP
Inherits QWidget\&.
.SS "Public Slots"

.in +1c
.ti -1c
.RI "void \fBrefresh\fP ()"
.br
.RI "\fBLogbookWidget::refresh\fP Refreshes the view to reflect changes in the database\&. "
.ti -1c
.RI "void \fBonLogbookWidget_viewSelectionChanged\fP (\fBSettingsWidget::SettingSignal\fP signal)"
.br
.ti -1c
.RI "void \fBrepopulateModel\fP ()"
.br
.RI "\fBLogbookWidget::repopulateModel\fP (public slot) - cleanly re-populates the model to cater for a change to the database connection (for example, when a backup is created or restored) "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLogbookWidget\fP (\fBACompletionData\fP &completion_data, QWidget *parent=nullptr)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBchangeEvent\fP (QEvent *event) override"
.br
.RI "Handles change events, like updating the UI to new localisation\&. "
.in -1c
.SH "Detailed Description"
.PP 
The \fBLogbookWidget\fP displays data from the database in a QSqlTableView fed by a QSqlQuery Model\&. 

The \fBLogbookWidget\fP is the primary display interface for flights logged in the database\&. It fetches and stores flight data from the database via a QSqlQueryModel and displays it in a QTableView\&. With the way the flight data is written in the database, it would not be human-readable, so some processing is done on the database side to present a nicely formatted, human-readable display\&. This is achieved by means of a \fCSQL View\fP\&.
.PP
The user can select a view from a list of available views in the \fBSettingsWidget\fP\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for openPilotLog from the source code\&.
