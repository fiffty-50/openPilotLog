.TH "AircraftWidget" 3 "Mon Jul 11 2022" "openPilotLog" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AircraftWidget \- The \fBAircraftWidget\fP is used to view, edit, delete or add new tails\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <aircraftwidget\&.h>\fP
.PP
Inherits QWidget\&.
.SS "Public Slots"

.in +1c
.ti -1c
.RI "void \fBonAircraftWidget_settingChanged\fP (\fBSettingsWidget::SettingSignal\fP signal)"
.br
.RI "invokes setupModelAndView() to account for changes the user has made in the \fBSettingsWidget\fP "
.ti -1c
.RI "void \fBonAircraftWidget_dataBaseUpdated\fP ()"
.br
.RI "Refreshes the view if the Database has been altered from outside the \fBAircraftWidget\fP\&. "
.ti -1c
.RI "void \fBrepopulateModel\fP ()"
.br
.RI "\fBAircraftWidget::repopulateModel\fP (public slot) - re-populates the model to cater for a change to the database connection (for example, when a backup is created) "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAircraftWidget\fP (QWidget *parent=nullptr)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBchangeEvent\fP (QEvent *event) override"
.br
.RI "Handles change events, like updating the UI to new localisation\&. "
.in -1c
.SH "Detailed Description"
.PP 
The \fBAircraftWidget\fP is used to view, edit, delete or add new tails\&. 

The widget consists of two main parts, a \fIQTableView\fP on the left side and a \fIQStackedWidget\fP on the right side\&.
.PP
In the QTableView, a QSqlTableModel is used to access a view from the database, which holds a tails' Registration, Type and Company\&.
.PP
The welcome page shown on the QStackedWidget on the right side has a QLineEdit that functions as a search box and a QCombobox holding the possible columns that can be used to filter what is displayed\&. The text of the QLineEdit is used as a filter for the QSqlTableModel, so the view is updated in real time\&.
.PP
The \fI\fBNewTailDialog\fP\fP is used for creating a new entry as well as for editing an existing entry\&. If the user selects a row in the QTableView, the NewTailDilog is displayed on the right side of the Widget, inside the QStackedWidget\&. In order to avoid leaks from any previously made selections, existing Dialogs are deleted before a new one is created\&. The \fBNewTailDialog\fP's \fCaccepted\fP and \fCrejected\fP signals are connected to refresh the view as required\&.
.PP
Note: The ATailEntry class is used to operate on individual aircraft, whereas the \fBAAircraftEntry\fP class is used to retreive templates of aircraft types\&. For example, 'D-ABCD' and 'N-XYZ' are different tails (Registrations), but they might be the same type of aircraft, for example 'Boeing 737-800'\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for openPilotLog from the source code\&.
